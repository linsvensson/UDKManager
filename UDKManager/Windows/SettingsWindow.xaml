<controls:MetroWindow x:Class="ZerO.Windows.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        Title="Settings" Height="430.047" Width="398" ResizeMode="NoResize" WindowStartupLocation="CenterOwner" ShowCloseButton="False" ShowIconOnTitleBar="False" ShowMinButton="False" ShowMaxRestoreButton="False" ShowInTaskbar="False" TitleCaps="False" IsEnabled="False">

    <Grid HorizontalAlignment="Left" Width="418">

        <TabControl x:Name="SettingsTabControl" Height="344" Margin="10,10,36,0" VerticalAlignment="Top" TabStripPlacement="Top" BorderBrush="Black">
            <TabItem x:Name="GeneralTabItem" Header="General" Margin="0,0,-3,0">
                <TabItem.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="MinWidth" Value="5" />
                        <Setter Property="MinHeight" Value="5" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Label x:Name="root" FontSize="13.67" Height="31">
                                        <ContentPresenter ContentSource="Header"  RecognizesAccessKey="True" />
                                    </Label>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource AccentColor}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="false">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayNormal}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger SourceName="root" Property="IsMouseOver" Value="True">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayHover}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="70"></RowDefinition>
                        <RowDefinition Height="70"></RowDefinition>
                        <RowDefinition Height="70"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Row="0" Margin="5,5,5,0" BorderThickness="0.5" ToolTip="The root folder where UDK is installed">
                        <GroupBox.Header>
                            <TextBlock Text="UDK Root"/>
                        </GroupBox.Header>
                        <Grid>
                            <TextBox x:Name="RootTextBox" HorizontalAlignment="Left" Height="23" Margin="5,2,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="282" IsEnabled="True" IsReadOnly="True" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" FontSize="11"/>
                            <Button x:Name="ChangeRootFolder" Content="Set" Style="{DynamicResource SquareButtonStyle}" Margin="301,0,1,0" Click="changeRootFolder_Click" Height="30" VerticalAlignment="Top"/>
                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="1" Margin="5,5,5,0" BorderThickness="0.5" ToolTip="The file you use to run your game e.g 'UDK.exe'">
                        <GroupBox.Header>
                            <TextBlock Text="UDK .exe"/>
                        </GroupBox.Header>
                        <Grid>
                            <TextBox x:Name="ExeTextBox" HorizontalAlignment="Left" Height="23" Margin="5,2,0,8" TextWrapping="Wrap" Width="282" IsEnabled="True" IsReadOnly="True" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" FontSize="11"/>
                            <Button x:Name="SetExeFile" Content="Set" Style="{DynamicResource SquareButtonStyle}" Margin="301,0,1,0" Click="setExeFile_Click" Height="30" VerticalAlignment="Top"/>
                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="2" Margin="5,5,5,0" BorderThickness="0.5" ToolTip="This should be the folder containing your UDK maps">
                        <GroupBox.Header>
                            <TextBlock Text="Maps Folder"/>
                        </GroupBox.Header>
                        <Grid>
                            <TextBox x:Name="MapsTextBox" HorizontalAlignment="Left" Height="23" Margin="5,2,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="282" IsEnabled="True" IsReadOnly="True" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" FontSize="11"/>
                            <Button x:Name="SetMapsFolder" Content="Set" Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" Margin="301,0,0,0" VerticalAlignment="Top" Width="42" Height="30" Click="setMapsFolder_Click"/>
                        </Grid>
                    </GroupBox>

                    <CheckBox x:Name="RememberCheckBox" Content="Remember current session for next launch" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="26" Width="277" Click="rememberCheckBox_Click" Grid.Row="3"/>
                    <CheckBox x:Name="TrayCheckBox" Content="Minimize to system tray" HorizontalAlignment="Left" Margin="10,36,0,0" VerticalAlignment="Top" Height="26" Width="169" Click="trayCheckBox_Click" Grid.Row="3"/>
                    <CheckBox x:Name="AutoUpdateCheckBox" Content="Enable auto-updater" HorizontalAlignment="Left" Margin="10,62,0,0" VerticalAlignment="Top" Height="26" Width="169" Click="CheckBox_Click" Grid.Row="3"/>
                    <Button x:Name="ForceUpdate" Content="Check for updates" Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" Margin="239,53,0,0" VerticalAlignment="Top" Width="117" Height="35" Click="forceUpdate_Click" Grid.Row="3"/>
                </Grid>
            </TabItem>

            <TabItem x:Name="TextEditorTabItem" Header="TextEditor" Margin="0,0,-3,0">
                <TabItem.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="MinWidth" Value="5" />
                        <Setter Property="MinHeight" Value="5" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Label x:Name="root" FontSize="13.67" Height="31">
                                        <ContentPresenter ContentSource="Header"  RecognizesAccessKey="True" />
                                    </Label>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource AccentColor}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="false">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayNormal}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger SourceName="root" Property="IsMouseOver" Value="True">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayHover}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="90"></RowDefinition>
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Row="2">
                        <GroupBox.Header>
                            <TextBlock Text="Misc"/>
                        </GroupBox.Header>
                        <Grid>
                            <CheckBox x:Name="LineHighlightCheckBox" Content="Enable current line highlight" HorizontalAlignment="Left" Margin="12,14,0,0" VerticalAlignment="Top" Width="175" Click="CheckBox_Click" Height="17"/>
                            <CheckBox x:Name="LineNumberCheckBox" Content="Display line number" HorizontalAlignment="Left" Margin="192,14,0,0" VerticalAlignment="Top" Width="142" Click="CheckBox_Click" Height="17"/>
                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="0" >
                        <GroupBox.Header>
                            <TextBlock Text="Auto-Completion"/>
                        </GroupBox.Header>
                        <Grid>
                            <CheckBox x:Name="AutoCompleteCheckBox" Content="Enable auto-completion on input" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="313" Click="CheckBox_Click"/>
                            <CheckBox x:Name="FunctionHintCheckBox" Content="Hint function parameters on input" HorizontalAlignment="Left" Margin="10,32,0,0" VerticalAlignment="Top" Width="313" Click="CheckBox_Click"/>
                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="1" >
                        <GroupBox.Header>
                            <TextBlock Text="Auto-Insert"/>
                        </GroupBox.Header>
                        <Grid >
                            <CheckBox x:Name="InsertParentCheckBox" Content="(" HorizontalAlignment="Left" Margin="10,6,0,0" VerticalAlignment="Top" Width="45" Click="autoInsertCheckBox_Click" Height="17" RenderTransformOrigin="0.5,0.5"/>
                            <CheckBox x:Name="InsertBracketCheckBox" Content="[" HorizontalAlignment="Left" Margin="10,28,0,0" VerticalAlignment="Top" Width="45" Click="autoInsertCheckBox_Click" Height="17"/>
                            <CheckBox x:Name="InsertCurlyBracketCheckBox" Content="{}{" HorizontalAlignment="Left" Margin="10,50,0,0" VerticalAlignment="Top" Width="45" Click="autoInsertCheckBox_Click" Height="16"/>
                            <CheckBox x:Name="InsertQuotationCheckBox" Content="&quot;" HorizontalAlignment="Left" Margin="127,6,0,0" VerticalAlignment="Top" Width="45" Click="autoInsertCheckBox_Click" Height="17"/>
                            <CheckBox x:Name="InsertSingleQuotationCheckBox" Content="'" HorizontalAlignment="Left" Margin="127,28,0,0" VerticalAlignment="Top" Width="45" Click="autoInsertCheckBox_Click" Height="16"/>
                        </Grid>
                    </GroupBox>

                </Grid>
            </TabItem>

            <TabItem x:Name="ThemeTabItem" Header="Theme" FontSize="10" Margin="10,0,-10,0">
                <TabItem.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="MinWidth" Value="5" />
                        <Setter Property="MinHeight" Value="5" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Label x:Name="root" FontSize="13.67" Height="31">
                                        <ContentPresenter ContentSource="Header"  RecognizesAccessKey="True" />
                                    </Label>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource AccentColor}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="false">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayNormal}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger SourceName="root" Property="IsMouseOver" Value="True">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayHover}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Row="0">
                        <GroupBox.Header>
                            <TextBlock Text="Accent" FontSize="12"/>
                        </GroupBox.Header>
                        <Grid>
                            <Button x:Name="GreenButton" Content="" HorizontalAlignment="Left" Margin="23,38,0,0" VerticalAlignment="Top" Width="42" Height="34" Background="LimeGreen" BorderBrush="{x:Null}" Click="greenButton_Click">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="BorderThickness" Value="5.0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="Border" BorderThickness="3" Background="#FF32CD32">
                                                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsDefaulted" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                            <Setter Property="Foreground" Value="#888888"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Resources>
                            </Button>

                            <Button x:Name="BlueButton" Content="" HorizontalAlignment="Left" Margin="86,38,0,0" VerticalAlignment="Top" Width="42" Height="34" Background="#FF4AA4F0" BorderBrush="{x:Null}" Click="blueButton_Click">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="BorderThickness" Value="3.0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="Border" BorderThickness="2" Background="#FF4AA4F0">
                                                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsDefaulted" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                            <Setter Property="Foreground" Value="#888888"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Resources>
                            </Button>

                            <Button x:Name="PurpleButton" Content="" HorizontalAlignment="Left" Margin="147,38,0,0" VerticalAlignment="Top" Width="42" Height="34" Background="#FFC751C7" BorderBrush="{x:Null}" Click="purpleButton_Click">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="BorderThickness" Value="3.0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="Border" BorderThickness="2" Background="#FFC751C7">
                                                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsDefaulted" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                            <Setter Property="Foreground" Value="#888888"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Resources>
                            </Button>

                            <Button x:Name="OrangeButton" Content="" HorizontalAlignment="Left" Margin="208,38,0,0" VerticalAlignment="Top" Width="42" Height="34" Background="#FFFBB875" BorderBrush="{x:Null}" Click="orangeButton_Click">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="BorderThickness" Value="3.0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="Border" BorderThickness="2" Background="#FFFBB875">
                                                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsDefaulted" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                            <Setter Property="Foreground" Value="#888888"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Resources>
                            </Button>

                            <Button x:Name="RedButton" Content="" HorizontalAlignment="Left" Margin="268,38,0,0" VerticalAlignment="Top" Width="42" Height="34" Background="#FFF34C4C" BorderBrush="{x:Null}" Click="redButton_Click">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="BorderThickness" Value="3.0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="Border" BorderThickness="2" Background="#FFF34C4C">
                                                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsDefaulted" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4F4F4F" />
                                                            <Setter Property="Foreground" Value="#888888"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="1">
                        <GroupBox.Header>
                            <TextBlock Text="Theme" FontSize="12"/>
                        </GroupBox.Header>
                        <Grid>
                            <ComboBox x:Name="ThemeComboBox" Margin="119,40,120,35" DropDownClosed="themeComboBox_DropDownClosed" FontFamily="Segoe UI"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>

        <Button x:Name="BackButton" Content="Back" Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" Margin="10,359,0,0" VerticalAlignment="Top" Width="118" Height="32" Click="backButton_Click"/>

    </Grid>

    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" x:Name="BlueAccent"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Red.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </controls:MetroWindow.Resources>
</controls:MetroWindow>

