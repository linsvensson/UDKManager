<controls:MetroWindow x:Name="Main" x:Class="ZerO.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ZerO"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        Title="UDKManager Editor" Width="1300" Height="700" Loaded="Main_Loaded" Icon="Resources/icon.ico" TextOptions.TextFormattingMode="Display" MinWidth="1300" MinHeight="700" ResizeMode="CanResizeWithGrip" SaveWindowPosition="True" TitleCaps="False" IsTabStop="True" Focusable="False">
    <Grid >
        <RichTextBox x:Name="LogRichTextBox" FocusVisualStyle="{x:Null}" Background="Black" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Stretch" Block.LineHeight="6" Margin="275,0,5,10" IsReadOnly="True" AutoWordSelection="False" IsUndoEnabled="False" MaxWidth="Infinity" RenderTransformOrigin="0.5,0.5" MinWidth="999" MinHeight="137" HorizontalContentAlignment="Stretch" VerticalAlignment="Bottom" Height="119" SelectionBrush="{x:Null}" IsTabStop="False" BorderBrush="#FFABADB3">
            <RichTextBox.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </RichTextBox.LayoutTransform>
            <RichTextBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </RichTextBox.RenderTransform>
        </RichTextBox>

        <Border BorderBrush="Black" BorderThickness="1" Margin="275,5,5,152" MinWidth="1012" MinHeight="512">
        </Border>


        <Button Content="" x:Name="NewButton" HorizontalAlignment="Left" Margin="292,10,0,0" VerticalAlignment="Top" Width="34" Click="new_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="New tab      Ctrl+N">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageFileNew.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileNew.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileNew.png" Opacity="0.4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="OpenButton" HorizontalAlignment="Left" Margin="331,10,0,0" VerticalAlignment="Top" Width="34" Click="open_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Open file      Ctrl+O">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageFileOpen.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileOpen.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileOpen.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="SaveButton" HorizontalAlignment="Left" Margin="370,10,0,0" VerticalAlignment="Top" Width="34" Click="save_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Save current file      Ctrl+S">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageFileSave.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileSave.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileSave.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="SaveAllButton" HorizontalAlignment="Left" Margin="409,10,0,0" VerticalAlignment="Top" Width="34" Click="saveAll_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Save all open files      Alt+S">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageFileSaveAll.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileSaveAll.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileSaveAll.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="CloseButton" HorizontalAlignment="Left" Margin="476,10,0,0" VerticalAlignment="Top" Width="34" Click="close_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Close selected tab       Ctrl+W">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageFileClose.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileClose.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileClose.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="CloseAllButton" HorizontalAlignment="Left" Margin="515,10,0,0" VerticalAlignment="Top" Width="34" Click="closeAll_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Close all open tabs        Alt+W">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageFileCloseAll.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileCloseAll.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageFileCloseAll.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="CutButton" HorizontalAlignment="Left" Margin="581,10,0,0" VerticalAlignment="Top" Width="34" Click="cut_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Cut      Ctrl+X">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageEditCut.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditCut.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditCut.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="CopyButton" HorizontalAlignment="Left" Margin="620,10,0,0" VerticalAlignment="Top" Width="34" Click="copy_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Copy       Ctrl+C">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageEditCopy.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditCopy.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditCopy.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="PasteButton" HorizontalAlignment="Left" Margin="659,10,0,0" VerticalAlignment="Top" Width="34" Click="paste_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Paste        Ctrl+V">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageEditPaste.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditPaste.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditPaste.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="UndoButton" HorizontalAlignment="Left" Margin="735,10,0,0" VerticalAlignment="Top" Width="34" Click="undo_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Undo       Ctrl+Z">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageEditUndo.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditUndo.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditUndo.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="RedoButton" HorizontalAlignment="Left" Margin="774,10,0,0" VerticalAlignment="Top" Width="34" Click="redo_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Redo       Ctrl+Y">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageEditRedo.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditRedo.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditRedo.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="FindButton" HorizontalAlignment="Left" Margin="844,10,0,0" VerticalAlignment="Top" Width="34" Click="find_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Find       Ctrl+F">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageEditFind.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditFind.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditFind.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="ReplaceButton" HorizontalAlignment="Left" Margin="883,10,0,0" VerticalAlignment="Top" Width="34" Click="replace_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Replace      Ctrl+H">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageEditReplace.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditReplace.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageEditReplace.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="CommentButton" HorizontalAlignment="Left" Margin="961,10,0,0" VerticalAlignment="Top" Width="34" Click="comment_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Comment out the selected lines      Ctrl+K">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageComment.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageComment.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageComment.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Content="" x:Name="NoCommentButton" HorizontalAlignment="Left" Margin="1000,10,0,0" VerticalAlignment="Top" Width="34" Click="noComment_Click" BorderBrush="Black" BorderThickness="2" Height="30" ToolTip="Uncomment the selected lines        Ctrl+K">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr_main" Margin="0,0,4,4" BorderThickness="0" BorderBrush="Black">
                        <Border.Background>
                            <ImageBrush ImageSource="Resources/ImageNoComment.png" Stretch="Uniform"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,6,8,6" ContentSource="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BorderThickness" x:Name="border" Value="3.0"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageNoComment.png" Opacity="0.7" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bdr_main" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Resources/ImageNoComment.png" Opacity="0.4" Stretch="Uniform"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <xcad:DockingManager Margin="281,40,10,177" Name="DockManager" BorderBrush="Black" ActiveContent="{Binding DocumentManager.ActiveDocument,
                                                       Mode=TwoWay}" ActiveContentChanged="dockManager_ActiveContentChanged" SizeChanged="MainWindow_SizeChanged">
            <xcad:DockingManager.Resources>
                <Style x:Key="DocumentPaneControlStyle" TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="#FF939393"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                                <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                                <Setter Property="Padding" Value="4"/>
                                <Setter Property="Margin" Value="2,0,2,0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Selector.IsSelected"
                                        Value="true">
                                                    <Setter Property="Background"
                                        Value="Transparent" />
                                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </xcad:DockingManager.Resources>
            <xcad:DockingManager.DocumentHeaderTemplate>

                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding IconSource}" Margin="0,0,4,0" Stretch="Fill" Width="15" Height="15"/>
                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                    </StackPanel>
                </DataTemplate>
            </xcad:DockingManager.DocumentHeaderTemplate>
            <xcad:LayoutRoot>
                <xcad:LayoutPanel>
                    <xcad:LayoutDocumentPane x:Name="DocumentPane">
                    </xcad:LayoutDocumentPane>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
        </xcad:DockingManager>

        <TabControl x:Name="TypeTabControl" Margin="10,40,0,156" TabStripPlacement="Bottom" BorderBrush="Black" MinWidth="261" MinHeight="441" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" RenderTransformOrigin="0.5,0.5" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left" Width="261" MaxWidth="261" SelectionChanged="typeTabControl_SelectionChanged">
            <TabControl.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TabControl.LayoutTransform>
            <TabControl.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TabControl.RenderTransform>
            <TabItem x:Name="BrowseTabItem" Header="Browse" Margin="0,0,10,0" BorderBrush="{x:Null}" MinWidth="59" MinHeight="31" Height="31">
                <TabItem.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="MinWidth" Value="5" />
                        <Setter Property="MinHeight" Value="5" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Label x:Name="root" FontSize="12" Height="31">
                                        <ContentPresenter ContentSource="Header"  RecognizesAccessKey="True" />
                                    </Label>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource AccentColor}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="false">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="Gray" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger SourceName="root" Property="IsMouseOver" Value="True">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="DarkGray" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <TreeView Name="BrowseTreeView"  VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" Loaded="browseTreeView_Loaded" MouseRightButtonDown="browseTreeView_MouseRightButtonDown" MouseLeftButtonDown="browseTreeView_MouseLeftButtonDown" MouseDoubleClick="browseTreeView_MouseDoubleClick" BorderBrush="{x:Null}" MinWidth="255" MinHeight="402" VerticalContentAlignment="Top" HorizontalAlignment="Left" KeyDown="browseTreeView_KeyDown">
                        <TreeView.Resources>
                            <ContextMenu x:Key="OnClassItem" StaysOpen="True">
                                <MenuItem Name="openClass" Header="Open" Click="openClass_Click"/>
                                <MenuItem Name="renameClass" Header="Rename" Click="renameClass_Click"/>
                                <MenuItem Name="deleteClass" Header="Delete" Click="deleteClass_Click"/>
                            </ContextMenu>

                            <ContextMenu x:Key="OnProjectItem" StaysOpen="True">
                                <MenuItem Name="newClass" Header="Create New Class" Click="newClass_Click"/>
                                <Separator></Separator>
                                <MenuItem Name="openProject" Header="Open" Click="openProject_Click"/>
                                <MenuItem Name="renameProject" Header="Rename" Click="renameProject_Click"/>
                                <MenuItem Name="deleteProject" Header="Delete" Click="deleteProject_Click"/>
                            </ContextMenu>

                            <ContextMenu  x:Key="OffItem" StaysOpen="True">
                                <MenuItem Name="newProject" Header="Create New Project" Click="newProject_Click"/>
                            </ContextMenu>
                            <SolidColorBrush Color="{DynamicResource AccentColor}" x:Key="{x:Static SystemColors.HighlightBrushKey}"/>
                            <SolidColorBrush Color="{DynamicResource AccentColor}" x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"/>

                            <Style TargetType="{x:Type local:CustomItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" >
                                                <Image x:Name="img" Width="15" Height="15" Stretch="Fill" Source="{Binding Image, RelativeSource={RelativeSource AncestorType={x:Type local:CustomItem}, Mode=FindAncestor}}"/>
                                                <TextBlock Text="{Binding}" Margin="5,0" VerticalAlignment="Center" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1.5"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                        <Setter Property="Background" Value="#FF65A4FF"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsSelectionActive" Value="True"/>
                                        </MultiTrigger.Conditions>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </TabItem>

            <TabItem x:Name="TestMapTabItem" Header="Test Maps" Margin="-6,0,6,0" BorderBrush="{x:Null}" MinWidth="47" MinHeight="31" Height="31">
                <TabItem.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="MinWidth" Value="5" />
                        <Setter Property="MinHeight" Value="5" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Label x:Name="root" FontSize="12" Height="31">
                                        <ContentPresenter ContentSource="Header"  RecognizesAccessKey="True" />
                                    </Label>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource AccentColor}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="false">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayNormal}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger SourceName="root" Property="IsMouseOver" Value="True">
                                            <Setter TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource GrayHover}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <TreeView x:Name="TestMapTreeView" HorizontalAlignment="Left" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" BorderBrush="{x:Null}" VerticalContentAlignment="Top" MouseDoubleClick="testMapTreeView_MouseDoubleClick" MouseLeftButtonDown="testMapTreeView_MouseLeftButtonDown" Width="254" MouseRightButtonDown="testMapTreeView_MouseRightButtonDown">
                        <TreeView.Resources>
                            <ContextMenu  x:Key="OffMapItem" StaysOpen="True">
                                <MenuItem Name="newtestMap" Header="Create New Test Map" Click="newTestMap_Click"/>
                            </ContextMenu>
                            <ContextMenu  x:Key="OnMapItem" StaysOpen="True">
                                <MenuItem Name="deleteMap" Header="Delete" Click="deleteTestMap_Click"/>
                            </ContextMenu>
                            <SolidColorBrush Color="{DynamicResource AccentColor}" x:Key="{x:Static SystemColors.HighlightBrushKey}"/>
                            <SolidColorBrush Color="{DynamicResource AccentColor}" x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"/>
                            <Style TargetType="{x:Type local:CustomItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" >
                                                <Image x:Name="img" Width="15" Height="15" Stretch="Fill" Source="{Binding Image, RelativeSource={RelativeSource AncestorType={x:Type local:CustomItem}, Mode=FindAncestor}}"/>
                                                <TextBlock Text="{Binding}" Margin="5,0" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1.5"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                        <Setter Property="Background" Value="#FF65A4FF"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsSelectionActive" Value="False"/>
                                        </MultiTrigger.Conditions>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </TabItem>

            <TabItem x:Name="SearchTabItem" Header="Search"  BorderBrush="{x:Null}" Width="47" MinWidth="47" MinHeight="31" Height="31" Margin="-1,0,1,0" >
                <TabItem.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="MinWidth" Value="5" />
                        <Setter Property="MinHeight" Value="5" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Label x:Name="root" FontSize="12" Height="31">
                                        <ContentPresenter ContentSource="Header"  RecognizesAccessKey="True" />
                                    </Label>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource AccentColor}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="false">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="Gray" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger SourceName="root" Property="IsMouseOver" Value="True">
                                            <Setter  TargetName="root" Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="DarkGray" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <TreeView x:Name="SearchTreeView" HorizontalAlignment="Left" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" BorderBrush="{x:Null}" ToolTip="Alt+F to search for files" VerticalContentAlignment="Top" MouseLeftButtonDown="searchTreeView_MouseLeftButtonDown" MouseDoubleClick="searchTreeView_MouseDoubleClick" Width="254">
                        <TreeView.Resources>
                            <SolidColorBrush Color="{DynamicResource AccentColor}" x:Key="{x:Static SystemColors.HighlightBrushKey}"/>
                            <SolidColorBrush Color="{DynamicResource AccentColor}" x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"/>
                            <Style TargetType="{x:Type local:CustomItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" >
                                                <Image x:Name="img" Width="15" Height="15" Stretch="Fill" Source="{Binding Image, RelativeSource={RelativeSource AncestorType={x:Type local:CustomItem}, Mode=FindAncestor}}"/>
                                                <TextBlock Text="{Binding}" Margin="5,0" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1.5"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="Black"/>
                                        <Setter Property="Background" Value="#FF65A4FF"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsSelectionActive" Value="False"/>
                                        </MultiTrigger.Conditions>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </TabItem>
        </TabControl>

        <Button x:Name="CompileButton" Style="{DynamicResource SquareButtonStyle}" Content="Compile Scripts" Margin="43,0,0,27" Click="compileButton_Click" VerticalAlignment="Bottom" HorizontalAlignment="Left" MinWidth="190" MinHeight="64" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Height="22" Width="172"/>
        <Button x:Name="EditorButton" Style="{DynamicResource SquareButtonStyle}" Content="Start UDK Editor" Margin="43,0,0,96" Click="runEditorMenuItem_Click" VerticalAlignment="Bottom" HorizontalAlignment="Left" MinWidth="190" MinHeight="34" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Height="33" Width="173"/>
        <TextBlock x:Name="TotalTextBlock" Margin="290,0,0,156" TextWrapping="Wrap" Text="TOTAL" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Bottom">
            <TextBlock.Foreground>
                <SolidColorBrush Color="{DynamicResource BlackColor}"/>
            </TextBlock.Foreground>
        </TextBlock>
        <TextBlock x:Name="LengthTextBlock" Margin="433,0,0,156" TextWrapping="Wrap" Text="length: 0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="77"/>
        <TextBlock x:Name="LinesTextBlock" Margin="356,0,0,156" TextWrapping="Wrap" Text="lines: 0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="72"/>

        <Separator Margin="527,0,0,152" RenderTransformOrigin="0.5,0.5" MinWidth="18" MinHeight="26" HorizontalAlignment="Left" VerticalAlignment="Bottom">
            <Separator.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Separator.RenderTransform>
        </Separator>

        <TextBlock x:Name="CurrentTextBlock" Margin="596,0,0,156" TextWrapping="Wrap" Text="CURRENT" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
        <TextBlock x:Name="LineTextBlock" Margin="664,0,0,156" TextWrapping="Wrap" Text="line: 1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="66"/>
        <TextBlock x:Name="ColumnTextBlock" Margin="735,0,0,156" TextWrapping="Wrap" Text="col: 1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="49"/>

        <Separator Margin="832,0,0,152" RenderTransformOrigin="0.5,0.5" MinWidth="18" MinHeight="26" HorizontalAlignment="Left" VerticalAlignment="Bottom">
            <Separator.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Separator.RenderTransform>
        </Separator>

        <TextBlock x:Name="SelectedTextBlock" Margin="912,0,0,156" TextWrapping="Wrap" Text="SELECTED" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
        <TextBlock x:Name="SelTextBlock" Margin="1000,0,0,156" TextWrapping="Wrap" Text="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="46"/>

        <Menu x:Name="MainMenu" Height="24" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{x:Null}" Width="216">
            <MenuItem Header="_New" IsTabStop="False">
                <MenuItem x:Name="NewProjectMenuItem" Header="_Project" Click="newProjectMenuItem_Click"/>
                <MenuItem x:Name="NewClassMenuItem" Header="_Class" Click="newClassMenuItem_Click"/>
                <MenuItem x:Name="NewTestMapMenuItem" Header="_TestMap" Click="newTestMapMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="_Open" IsTabStop="False">
                <MenuItem x:Name="UdkRootMenuItem" Header="_UDK Root Directory" Click="udkRootMenuItem_Click"/>
                <Separator />
                <MenuItem x:Name="RunEditorMenuItem" Header="_UDK Editor" Click="runEditorMenuItem_Click"/>
                <MenuItem x:Name="RunGameMenuItem" Header="_UDK Game" Click="runGameMenuItem_Click"/>
                <MenuItem x:Name="RunFrontendMenuItem" Header="_Unreal Frontend" Click="runFrontendMenuItem_Click"/>
                <Separator />
                <MenuItem x:Name="LastLogMenuItem" Header="_Last Log" Click="lastLogMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="_Reload" IsTabStop="False">
                <MenuItem x:Name="ReloadAllMenuItem" Header="_All" Click="reloadAllMenuItem_Click"/>
                <Separator />
                <MenuItem x:Name="ReloadProjectsMenuItem" Header="_Projects Folder" Click="reloadProjectsMenuItem_Click"/>
                <MenuItem x:Name="ReloadTestMapsMenuItem" Header="_TestMaps Folder" Click="reloadTestMapsMenuItem_Click"/>
                <Separator />
                <MenuItem x:Name="ReloadScintillaMenuItem" Header="_UnrealScript.xml" Click="reloadScintillaMenuItem_Click"/>
            </MenuItem>
        </Menu>
        <ComboBox x:Name="ZoomComboBox" HorizontalAlignment="Right" Margin="0,0,11,156" VerticalAlignment="Bottom" Width="53" Height="19" DropDownClosed="zoomCB_DropDownClosed" IsReadOnly="True" IsEditable="True" MinHeight="10"/>
        <Label Content="Zoom factor:" HorizontalAlignment="Right" Margin="0,0,67,152" VerticalAlignment="Bottom" Width="80" Height="26" FontSize="11" ToolTip="Ctrl+Mouse Wheel to zoom in/out"/>
    </Grid>

    <controls:MetroWindow.WindowCommands>
        <controls:WindowCommands>
            <Button x:Name="SettingsButton" Content="settings" Click="settingsButton_Click"/>
            <Button x:Name="AboutButton" Content="about" Click="aboutButton_Click"/>
        </controls:WindowCommands>
    </controls:MetroWindow.WindowCommands>

    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Red.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </controls:MetroWindow.Resources>
</controls:MetroWindow>
